{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","users","index","SearchBox","onSearchChange","type","placeholder","onChange","Scroll","props","style","overflow","height","children","App","SearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","searchFilter","this","filter","robot","toLowerCase","includes","length","display","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAgBeA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,OACI,sBAAKC,UAAU,sDAAf,UACN,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BL,EAA1B,cACrB,gCACA,6BAAKC,IACL,4BAAIC,WCYQI,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEJA,EAAOC,KAAI,SAACC,EAAOC,GACpB,OACC,cAAC,EAAD,CAEAV,GAAIO,EAAOG,GAAOV,GAClBC,KAAMM,EAAOG,GAAOT,KACpBC,MAAOK,EAAOG,GAAOR,OAHhBQ,SCIMC,EAXG,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eACnB,OACE,qBAAKT,UAAU,MAAf,SACC,uBAAOA,UAAU,mCACjBU,KAAK,SACLC,YAAY,iBACZC,SAAUH,OCCCI,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,SAAW,SAAUC,OAAQ,SAA1C,SACEH,EAAMI,YCwCKC,E,kDAvCX,aAAe,IAAD,8BACV,gBAWJC,aAAe,SAACC,GACZ,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAX1C,EAAKC,MAAQ,CACTtB,OAAQ,GACRmB,YAAa,IAJP,E,qDAOd,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAtB,GAAK,OAAI,EAAKgB,SAAS,CAAElB,OAAQE,S,oBAK/C,WAAU,IAAD,OACCyB,EAAeC,KAAKN,MAAMtB,OAAO6B,QAAO,SAACC,GAC3C,OAAOA,EAAMpC,KAAKqC,cAAcC,SAAS,EAAKV,MAAMH,YAAYY,kBAEpE,OAAiC,IAA7BH,KAAKN,MAAMtB,OAAOiC,OACX,yCAGH,sBAAKrC,UAAU,mBAAf,UACP,oBAAIe,MAAO,CAACuB,QAAS,gBAArB,0BACA,cAAC,EAAD,CAAW7B,eAAgBuB,KAAKZ,eACjB,cAAC,EAAD,UACZ,cAAC,EAAD,CAAUhB,OAAQ2B,a,GA5BZQ,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.2074639b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\n\r\nconst Card = ({id, name, email}) => {\r\n    return (\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-2\">\r\n\t\t<img alt=\"friends\" src={`https://robohash.org/${id}?150x150`}/>\r\n\t\t\t<div>\r\n\t\t\t<h2>{name}</h2>\r\n\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n    )\r\n\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from \"./Card\";\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n\t\t{\r\n\t\t \trobots.map((users, index) => {\r\n\t\t\treturn \t(\r\n\t\t\t\t<Card \r\n\t\t\t\tkey={index} \r\n\t\t\t\tid={robots[index].id} \r\n\t\t\t\tname={robots[index].name} \r\n\t\t\t\temail={robots[index].email}/>\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\t</div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\n\r\nconst SearchBox = ({onSearchChange}) => {\r\n\treturn (\r\n\t\t\t<div className=\"pa2\">\r\n\t\t\t\t<input className=\"pa3 ba b--green bg-lightest-blue\"\r\n\t\t\t\ttype=\"search\"\r\n\t\t\t\tplaceholder=\"search friends\"\r\n\t\t\t\tonChange={onSearchChange}/>\r\n\t\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react'\r\n\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflow : 'scroll', height: '500px'}}>\r\n\t\t {props.children}\r\n\t\t</div>\r\n\r\n\t\t)\r\n}\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from \"./CardList\"\r\nimport SearchBox from \"./SearchBox\"\r\n// import { robots } from './Robos.js'\r\nimport Scroll from './Scroll.js'\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robots: users }));\r\n    }\r\n    SearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n    render() {\r\n        const searchFilter = this.state.robots.filter((robot) => {\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n        })\r\n        if (this.state.robots.length === 0) {\r\n            return <h1>Loading</h1>\r\n        } else {\r\n            return (\r\n                <div className=\"tc bg-light-blue\">\r\n\t    \t\t\t\t<h1 style={{display: 'inline-block'}}>RobosFriends</h1>\r\n\t    \t\t\t\t<SearchBox onSearchChange={this.SearchChange}/>\r\n                        <Scroll>\r\n\t        \t\t\t<CardList robots={searchFilter}/>\r\n                        </Scroll>\r\n        \t\t\t</div>\r\n            );\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'tachyons'\r\nimport App from \"./App\"\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}